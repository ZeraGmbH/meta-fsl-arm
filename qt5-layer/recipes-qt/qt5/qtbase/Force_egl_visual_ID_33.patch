Subject: [PATCH] Workaround EGL initialization failure due visual mismatch

Error:

Warning: EGL suggested using X Visual ID 33 (RGB888) for EGL config 28 (RGB444), but this is incompatable
Unable to find an X11 visual which matches EGL config 28
Could not initialize EGL
Aborted

Upstream-Status: Inappropriate [workaround]

Signed-off-by: Otavio Salvador <otavio@ossystems.com.br>

---
 src/platformsupport/eglconvenience/qxlibeglintegration.cpp | 9 +++++++--
 1 file changed, 7 insertions(+), 2 deletions(-)

diff --git a/src/platformsupport/eglconvenience/qxlibeglintegration.cpp b/src/platformsupport/eglconvenience/qxlibeglintegration.cpp
--- a/src/platformsupport/eglconvenience/qxlibeglintegration.cpp
+++ b/src/platformsupport/eglconvenience/qxlibeglintegration.cpp
@@ -31,6 +31,8 @@
 **
 ****************************************************************************/
 
+#define QT_DEBUG_X11_VISUAL_SELECTION
+
 #include "qxlibeglintegration_p.h"
 
 VisualID QXlibEglIntegration::getCompatibleVisualId(Display *display, EGLDisplay eglDisplay, EGLConfig config)
@@ -86,12 +88,12 @@ VisualID QXlibEglIntegration::getCompatibleVisualId(Display *display, EGLDisplay
             // In some cases EGL tends to suggest a 24-bit visual for 8888
             // configs. In such a case we have to fall back to XGetVisualInfo.
             if (!visualMatchesConfig) {
-                visualId = 0;
 #ifdef QT_DEBUG_X11_VISUAL_SELECTION
                 qWarning("Warning: EGL suggested using X Visual ID %d (%d %d %d depth %d) for EGL config %d (%d %d %d %d), but this is incompatible",
                          (int)visualId, visualRedSize, visualGreenSize, visualBlueSize, chosenVisualInfo->depth,
                          configId, configRedSize, configGreenSize, configBlueSize, configAlphaSize);
 #endif
+                visualId = 0;
             }
         } else {
             qWarning("Warning: EGL suggested using X Visual ID %d for EGL config %d, but that isn't a valid ID",
@@ -102,15 +104,15 @@ VisualID QXlibEglIntegration::getCompatibleVisualId(Display *display, EGLDisplay
     }
 #ifdef QT_DEBUG_X11_VISUAL_SELECTION
     else
-        qDebug("EGL did not suggest a VisualID (EGL_NATIVE_VISUAL_ID was zero) for EGLConfig %d", configId);
+        qWarning("EGL did not suggest a VisualID (EGL_NATIVE_VISUAL_ID was zero) for EGLConfig %d", configId);
 #endif
 
     if (visualId) {
 #ifdef QT_DEBUG_X11_VISUAL_SELECTION
         if (configAlphaSize > 0)
-            qDebug("Using ARGB Visual ID %d provided by EGL for config %d", (int)visualId, configId);
+            qWarning("Using ARGB Visual ID %d provided by EGL for config %d", (int)visualId, configId);
         else
-            qDebug("Using Opaque Visual ID %d provided by EGL for config %d", (int)visualId, configId);
+            qWarning("Using Opaque Visual ID %d provided by EGL for config %d", (int)visualId, configId);
 #endif
         return visualId;
     }
@@ -144,11 +146,16 @@ VisualID QXlibEglIntegration::getCompatibleVisualId(Display *display, EGLDisplay
 
     if (visualId) {
 #ifdef QT_DEBUG_X11_VISUAL_SELECTION
-        qDebug("Using Visual ID %d provided by XGetVisualInfo for EGL config %d", (int)visualId, configId);
+        qWarning("Using Visual ID %d provided by XGetVisualInfo for EGL config %d", (int)visualId, configId);
 #endif
         return visualId;
     }
 
-    qWarning("Unable to find an X11 visual which matches EGL config %d", configId);
-    return (VisualID)0;
+    qWarning("Unable to find an X11 visual which matches EGL config %d (R=%d/G=%d/B=%d/A=%d)", 
+        configId,
+        configRedSize,
+        configGreenSize,
+        configBlueSize,
+        configAlphaSize);
+    return (VisualID)33;
 }
-- 
1.9.3

